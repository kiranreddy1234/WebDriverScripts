<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" retried="2" total="6" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="AllTestsSuite" duration-ms="238816" started-at="2020-03-31T19:45:23 IST" finished-at="2020-03-31T19:49:21 IST">
    <groups>
    </groups>
    <test name="Test Case1" duration-ms="238816" started-at="2020-03-31T19:45:23 IST" finished-at="2020-03-31T19:49:21 IST">
      <class name="testCases.AllTestCases">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testCases.AllTestCases@17030a6]" name="beforeSuite" is-config="true" duration-ms="266" started-at="2020-03-31T19:45:22 IST" finished-at="2020-03-31T19:45:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.AllTestCases@17030a6]" name="beforeTest" is-config="true" duration-ms="37610" started-at="2020-03-31T19:45:23 IST" finished-at="2020-03-31T19:46:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@17030a6]" name="beforeMethod" is-config="true" duration-ms="90" started-at="2020-03-31T19:46:01 IST" finished-at="2020-03-31T19:46:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.bootstrapDropdownMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@17030a6]" name="bootstrapDropdownMethod" duration-ms="21944" retried="true" started-at="2020-03-31T19:46:01 IST" finished-at="2020-03-31T19:46:23 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: -0.003
  (Session info: chrome=80.0.3987.149)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-UEKOIJ6', ip: '10.133.60.35', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_241'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\91829\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61763}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 7313126d5150f77a1615e308e64b2254]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: -0.003
  (Session info: chrome=80.0.3987.149)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-UEKOIJ6', ip: '10.133.60.35', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_241'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\91829\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61763}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 7313126d5150f77a1615e308e64b2254
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at testCases.AllTestCases.bootstrapDropdownMethod(AllTestCases.java:92)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bootstrapDropdownMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@17030a6]" name="getResult" is-config="true" duration-ms="1" started-at="2020-03-31T19:46:24 IST" finished-at="2020-03-31T19:46:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bootstrapDropdownMethod status=SKIP method=AllTestCases.bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@17030a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@17030a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-03-31T19:46:24 IST" finished-at="2020-03-31T19:46:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.bootstrapDropdownMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@17030a6]" name="bootstrapDropdownMethod" duration-ms="20026" retried="true" started-at="2020-03-31T19:46:24 IST" finished-at="2020-03-31T19:46:44 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: -0.011
  (Session info: chrome=80.0.3987.149)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-UEKOIJ6', ip: '10.133.60.35', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_241'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\91829\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61763}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 7313126d5150f77a1615e308e64b2254]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: -0.011
  (Session info: chrome=80.0.3987.149)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-UEKOIJ6', ip: '10.133.60.35', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_241'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\91829\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61763}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 7313126d5150f77a1615e308e64b2254
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at testCases.AllTestCases.bootstrapDropdownMethod(AllTestCases.java:92)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bootstrapDropdownMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@17030a6]" name="getResult" is-config="true" duration-ms="2" started-at="2020-03-31T19:46:44 IST" finished-at="2020-03-31T19:46:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bootstrapDropdownMethod status=SKIP method=AllTestCases.bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@17030a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@17030a6]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2020-03-31T19:46:44 IST" finished-at="2020-03-31T19:46:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.bootstrapDropdownMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@17030a6]" name="bootstrapDropdownMethod" duration-ms="25234" started-at="2020-03-31T19:46:44 IST" finished-at="2020-03-31T19:47:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bootstrapDropdownMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@17030a6]" name="getResult" is-config="true" duration-ms="1" started-at="2020-03-31T19:47:09 IST" finished-at="2020-03-31T19:47:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bootstrapDropdownMethod status=SUCCESS method=AllTestCases.bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@17030a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@17030a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-03-31T19:47:09 IST" finished-at="2020-03-31T19:47:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.brokenLinkMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="brokenLinkMethod()[pri:0, instance:testCases.AllTestCases@17030a6]" name="brokenLinkMethod" duration-ms="49480" started-at="2020-03-31T19:47:09 IST" finished-at="2020-03-31T19:47:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- brokenLinkMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@17030a6]" name="getResult" is-config="true" duration-ms="2" started-at="2020-03-31T19:47:58 IST" finished-at="2020-03-31T19:47:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=brokenLinkMethod status=SUCCESS method=AllTestCases.brokenLinkMethod()[pri:0, instance:testCases.AllTestCases@17030a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@17030a6]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-03-31T19:47:58 IST" finished-at="2020-03-31T19:47:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.fullPageScreenshot() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fullPageScreenshot()[pri:0, instance:testCases.AllTestCases@17030a6]" name="fullPageScreenshot" duration-ms="48694" started-at="2020-03-31T19:47:58 IST" finished-at="2020-03-31T19:48:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fullPageScreenshot -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@17030a6]" name="getResult" is-config="true" duration-ms="2" started-at="2020-03-31T19:48:47 IST" finished-at="2020-03-31T19:48:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fullPageScreenshot status=SUCCESS method=AllTestCases.fullPageScreenshot()[pri:0, instance:testCases.AllTestCases@17030a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@17030a6]" name="beforeMethod" is-config="true" duration-ms="6" started-at="2020-03-31T19:48:47 IST" finished-at="2020-03-31T19:48:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.handlingMultipleWindows() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="handlingMultipleWindows()[pri:0, instance:testCases.AllTestCases@17030a6]" name="handlingMultipleWindows" duration-ms="31406" started-at="2020-03-31T19:48:47 IST" finished-at="2020-03-31T19:49:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handlingMultipleWindows -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@17030a6]" name="getResult" is-config="true" duration-ms="1" started-at="2020-03-31T19:49:18 IST" finished-at="2020-03-31T19:49:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=handlingMultipleWindows status=SUCCESS method=AllTestCases.handlingMultipleWindows()[pri:0, instance:testCases.AllTestCases@17030a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.AllTestCases@17030a6]" name="afterTest" is-config="true" duration-ms="3022" started-at="2020-03-31T19:49:18 IST" finished-at="2020-03-31T19:49:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testCases.AllTestCases -->
    </test> <!-- Test Case1 -->
  </suite> <!-- AllTestsSuite -->
</testng-results>
